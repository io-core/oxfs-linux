name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}-build-${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get go  
        uses: actions/setup-go@v2
        with:
            go-version: '1.9.3'

      - name: Set tag name
        uses: olegtarasov/get-tag@v2.1
        id: tag
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - name: Build binary
        run: |
          mkdir dist
          
      - if: matrix.os == 'ubuntu-latest'
        name: Install ubuntu dependencies and build
        run: |
          cd oxfsgo
          go get github.com/io-core/oxfs-linux/oxfsgo
          go build cmd/oxfstool.go
          cp ./oxfstool ../dist/oxfstool-ubuntu-latest

      - if: matrix.os == 'macOS-latest'
        name: Install macOS dependencies and build
        run: | 
          cd oxfsgo
          go get github.com/io-core/oxfs-linux/oxfsgo
          go build cmd/oxfstool.go
          cp ./oxfstool ../dist/oxfstool-macOS-latest

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Set binary path name
        run: echo "BINARY_PATH=./dist/oxfstool-${{ matrix.os }}" >> $GITHUB_ENV

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ env.BINARY_PATH }}
          asset_name: oxfstool-on-${{ runner.os }}
          asset_content_type: application/octet-stream

          
